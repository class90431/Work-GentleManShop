{"remainingRequest":"/Users/heather/Desktop/Harden/work-ecshop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/heather/Desktop/Harden/work-ecshop/src/views/OnePageProduct.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/heather/Desktop/Harden/work-ecshop/src/views/OnePageProduct.vue","mtime":1559800630000},{"path":"/Users/heather/Desktop/Harden/work-ecshop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/heather/Desktop/Harden/work-ecshop/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/heather/Desktop/Harden/work-ecshop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/heather/Desktop/Harden/work-ecshop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data () {\n    return {\n      id: this.$route.params.id,\n      product: {},\n      status: {\n        btn: false\n      },\n      isLoading: false\n    }\n  },\n  methods: {\n    test () {\n      if (this.id === 'cart') {\n        this.$router.push({\n          path: `/nothing_cart`\n        })\n      } else {\n        this.getProduct()\n      }\n    },\n    getProduct () {\n      console.log(typeof (this.id))\n      const api = `${process.env.VUE_APP_API_PATH}/api/${process.env.VUE_APP_CUSTOMER_PATH}/product/${this.id}`\n      const vm = this\n      vm.isLoading = true\n      console.log(api)\n      this.$http.get(api).then((response) => {\n        console.log(response.data.success)\n        vm.isLoading = false\n        vm.product = response.data.product\n        this.product.num = 0 // 預設下拉式數量の選單\n        this.product.size = 0 // 預設下拉式大小の選單\n        // console.log(vm.product)\n      })\n    },\n    changeButton (size, num) {\n      console.log(size, num)\n      if (size !== 0 && num !== 0) {\n        this.status.btn = true\n      }\n    },\n    addtoCart (id, size, qty) {\n      console.log(id, size, qty)\n      const api = `${process.env.VUE_APP_API_PATH}/api/${process.env.VUE_APP_CUSTOMER_PATH}/cart`\n      const vm = this\n      vm.isLoading = true\n      const cart = {\n        product_id: id,\n        size,\n        qty\n      }\n      this.$http.post(api, { data: cart }).then((response) => {\n        console.log(response.data)\n        vm.isLoading = false\n        vm.getCart()\n      })\n    },\n    getCart () {\n      const api = `${process.env.VUE_APP_API_PATH}/api/${process.env.VUE_APP_CUSTOMER_PATH}/cart`\n      const vm = this\n      vm.isLoading = true\n      // console.log(api)\n      this.$http.get(api).then((response) => {\n        vm.isLoading = false\n        console.log(response.data)\n      })\n    }\n  },\n  created () {\n    console.log(this.$route.params.id)\n    // this.getProduct()\n    this.test()\n  }\n}\n",{"version":3,"sources":["OnePageProduct.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OnePageProduct.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!-- <loading :active.sync=\"isLoading\"></loading> -->{{ this.$route.params.id }}\n    <div class=\"row col-12\">\n      <div class=\"card col-8\">\n        <img :src=\"product.imageUrl\" class=\"card-img-top\" alt=\"...\">\n      </div>\n      <div class=\"col-4 text-left font-style pt-4\" id=\"productDetails\">\n        <p class=\"font-weight-bold\">{{ product.category }}</p>\n        <p class=\"text-muted\">{{ product.title }}</p>\n        <span v-if=\"product.origin_price !== product.price\" >NT {{ product.price | currency }}</span>\n        <span :class=\"{'text-decoration-through' : product.origin_price > product.price, 'text-opacity50': product.origin_price > product.price, 'ml-3': product.origin_price > product.price}\"\n          >NT {{ product.origin_price | currency }}</span>\n          <hr>\n        <div class=\"marginBottom\">\n          <select v-model=\"product.size\" class=\"form-control-sm\" style=\"background:#fff\" @change=\"changeButton(product.size, product.num)\">\n            <option value=\"0\" disabled selected=\"true\">--- 尚未選擇 ---</option>\n            <option value=\"S\">S</option>\n            <option value=\"M\">M</option>\n            <option value=\"L\">L</option>\n          </select>\n          <select v-model=\"product.num\" class=\"form-control-sm ml-3 mb-3\" style=\"background:#fff\" @change=\"changeButton(product.size, product.num)\">\n            <option value=\"0\" disabled selected=\"true\" style=\"color:gray\">--- 選擇數量 ---</option>\n            <option :value=\"number\" v-for=\"(number, index) in 10\" :key=\"index\">{{ number }}{{ product.unit }}</option>\n          </select><br>\n          <button v-if=\"!status.btn\" class=\"btn btn-black rounded-0 btn-sm btn-style\">請選擇尺寸&數量</button>\n          <button v-else class=\"btn btn-black rounded-0 btn-sm btn-style\" @click.prevent=\"addtoCart(product.id,product.size, product.num)\">加入購物車</button>\n        </div>\n        <hr>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      id: this.$route.params.id,\n      product: {},\n      status: {\n        btn: false\n      },\n      isLoading: false\n    }\n  },\n  methods: {\n    test () {\n      if (this.id === 'cart') {\n        this.$router.push({\n          path: `/nothing_cart`\n        })\n      } else {\n        this.getProduct()\n      }\n    },\n    getProduct () {\n      console.log(typeof (this.id))\n      const api = `${process.env.VUE_APP_API_PATH}/api/${process.env.VUE_APP_CUSTOMER_PATH}/product/${this.id}`\n      const vm = this\n      vm.isLoading = true\n      console.log(api)\n      this.$http.get(api).then((response) => {\n        console.log(response.data.success)\n        vm.isLoading = false\n        vm.product = response.data.product\n        this.product.num = 0 // 預設下拉式數量の選單\n        this.product.size = 0 // 預設下拉式大小の選單\n        // console.log(vm.product)\n      })\n    },\n    changeButton (size, num) {\n      console.log(size, num)\n      if (size !== 0 && num !== 0) {\n        this.status.btn = true\n      }\n    },\n    addtoCart (id, size, qty) {\n      console.log(id, size, qty)\n      const api = `${process.env.VUE_APP_API_PATH}/api/${process.env.VUE_APP_CUSTOMER_PATH}/cart`\n      const vm = this\n      vm.isLoading = true\n      const cart = {\n        product_id: id,\n        size,\n        qty\n      }\n      this.$http.post(api, { data: cart }).then((response) => {\n        console.log(response.data)\n        vm.isLoading = false\n        vm.getCart()\n      })\n    },\n    getCart () {\n      const api = `${process.env.VUE_APP_API_PATH}/api/${process.env.VUE_APP_CUSTOMER_PATH}/cart`\n      const vm = this\n      vm.isLoading = true\n      // console.log(api)\n      this.$http.get(api).then((response) => {\n        vm.isLoading = false\n        console.log(response.data)\n      })\n    }\n  },\n  created () {\n    console.log(this.$route.params.id)\n    // this.getProduct()\n    this.test()\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n  @import '../assets/all.scss';\n  .font-style {\n    font-size: .8rem;\n    font-family: 'LiHei Pro';\n  }\n  .text-decoration-through {\n    text-decoration:line-through;\n  }\n  .text-opacity50 {\n    opacity: 0.5;\n  }\n  select {\n    height: 20px;\n    -webkit-border-radius: 0;\n    border: 0;\n    outline: 1px solid #ccc;\n    outline-offset: -1px;\n  }\n  .btn-style {\n    width: 50%;\n    &:hover {\n      opacity: .5;\n    }\n  }\n  .marginBottom {\n    margin-bottom: 20%;\n  }\n</style>\n"]}]}